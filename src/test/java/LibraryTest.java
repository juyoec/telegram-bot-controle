import com.google.common.io.ByteStreams;
import org.jsoup.Connection;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.junit.Test;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.net.URLConnection;
import java.util.List;
import java.util.stream.Collectors;

import static org.junit.Assert.*;

/*
 * This Java source file was auto generated by running 'gradle init --type java-library'
 * by 'crassirostris' at '16. 1. 20 오전 12:06' with Gradle 2.8
 *
 * @author crassirostris, @date 16. 1. 20 오전 12:06
 */
public class LibraryTest {
    /*@Test public void testSomeLibraryMethod() {
        Library classUnderTest = new Library();
        assertTrue("someLibraryMethod should return 'true'", classUnderTest.someLibraryMethod());
    }*/
    private String searchUrl = "http://www.tosarang2.net/bbs/board.php?bo_table=torrent_kortv_drama&sca=&sop=and&sfl=wr_subject&stx=";
    private String searchDoamin = "https://m.torrentkim1.net/";
    private String text = "응답하라";
    private List<Content> contents;
    @Test
    public void test() {
        try {
            Document document = null;
            Connection connect = Jsoup.connect(searchUrl + text);
            connect.userAgent("Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.111 Safari/537.36");
            /*connect.header("Referer", "http://www.tosarang2.net/bbs/board.php?bo_table=torrent_kortv_ent");
            connect.cookie("e1192aefb64683cc97abb83c71057733", "dG9ycmVudF9rb3J0dl9lbnQ");
            connect.cookie("__cfduid", "d6ba4830b52426074a8d288b296ac701c1453454137");
            connect.cookie("PHPSESSID", "prg9e8l68lpin2935odt9dsao5");*/
            document = connect.get();
            Elements select = document.select("div#bo_l_list table>tbody>tr>td.td_subject");
            contents = select.stream().map((element1 ->
                    makeContent(element1)
            )).filter((el -> !"".equals(el.getTitle()) && !"".equals(el.getLink()) && el.getTitle().contains("720"))).collect(Collectors.toList());
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private Content makeContent(Element element) {

        String title = element.text();
        String link = element.select("a").attr("href");

        return Content.create(title, link);
    }

    @Test
    public void test2() throws IOException {
        String url = "http://www.tosarang2.net/bbs/download.php?bo_table=torrent_kortv_ent&wr_id=56497&no=0&sfl=wr_subject&stx=%EC%9D%91%EB%8B%B5%ED%95%98%EB%9D%BC&sop=and";
        Content c = Content.create("응답하라", url);
        InputStream is = null;

        FileOutputStream fos = new FileOutputStream(c.getTitle() + ".torrent");
        try {
            URL u = new URL(url);

            URLConnection conn = u.openConnection();
            conn.setRequestProperty("User-Agent", "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.111 Safari/537.36");
            conn.setRequestProperty("Referer", c.getLink());
            is = conn.getInputStream();
            ByteStreams.copy(is, fos);

            is.close();
            fos.close();
        } catch (IOException e) {
            try {
                is.close();
                fos.close();
            } catch (IOException e1) {
                e.printStackTrace();
            }
            throw e;
        }
    }
}
